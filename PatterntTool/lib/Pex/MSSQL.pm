
###############

##
#         Name: MSSQL.pm
#       Author: H D Moore <hdm [at] metasploit.com>
#      Version: $Revision: 1677 $
#      License:
#
#      This file is part of the Metasploit Exploit Framework
#      and is subject to the same licenses and copyrights as
#      the rest of this package.
#
##


package Pex::MSSQL;
use strict;
use Pex;

sub Ping
{
    my $host = shift || return;
    my $port = shift || 1434;
    my $r;
    my %x;
    
    my $s = Pex::Socket::Udp->new
    (
        'PeerAddr'  => $host, 
        'PeerPort'  => $port, 
    );
    return if $s->IsError;

    $s->Send("\x02");
    $r = $s->Recv(-1, 10);
    $s->Close();
    
    if (! $r)  { return }
    
    $r =~ s/.*(ServerName.*)/$1/;
    %x = split(/;/, $r);
    return %x;   
}


sub Login
{
    my $host = shift || return;
    my $port = shift || 1433;
    my $user = shift || "sa";
    my $pass = shift || "";
    my $r;
    
    my $s = Pex::Socket::Tcp->new
    (
        'PeerAddr'  => $host, 
        'PeerPort'  => $port, 
    );
    return if $s->IsError;
 
    my $p_hdr = 
    "\x02\x00\x02\x00\x00\x00\x02\x00\x00\x00".
    "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00".
    "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00".
    "\x00\x00\x00\x00\x00\x00\x00\x00\x00";

    my $p_pk2 =
    "\x30\x30\x30\x30\x30\x30\x61\x30\x00\x00".
    "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00".
    "\x00\x00\x00\x00\x20\x18\x81\xb8\x2c\x08\x03".
    "\x01\x06\x0a\x09\x01\x01\x00\x00\x00\x00\x00".
    "\x00\x00\x00\x00\x73\x71\x75\x65\x6c\x64\x61".
    "\x20\x31\x2e\x30\x00\x00\x00\x00\x00\x00\x00".
    "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00".
    "\x00\x0b\x00\x00\x00\x00\x00\x00\x00\x00\x00".
    "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00".
    "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00".
    "\x00";

    my $p_pk3 =
    "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00".
    "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00".
    "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00".
    "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00".
    "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00".
    "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00".
    "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00".
    "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00".
    "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00".
    "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00".
    "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00".
    "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00".
    "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00".
    "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00".
    "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00".
    "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00".
    "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00".
    "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00".
    "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00".
    "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00".
    "\x00\x00\x00\x00\x04\x02\x00\x00\x4d\x53\x44".
    "\x42\x4c\x49\x42\x00\x00\x00\x07\x06\x00\x00".
    "\x00\x00\x0d\x11\x00\x00\x00\x00\x00\x00\x00".
    "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00".
    "\x00\x00\x00\x00\x00\x00";


    my $p_lng =
    "\x02\x01\x00\x47\x00\x00\x02\x00\x00\x00\x00".
    "\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00".
    "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00".
    "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00".
    "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00".
    "\x00\x00\x00\x00\x00\x00\x30\x30\x30\x00\x00".
    "\x00\x03\x00\x00\x00";
    
    $user = substr($user, 0, 29) if length($user) > 30;
    $pass = substr($pass, 0, 29) if length($pass) > 30;
    
    my $ulen = pack("C", length($user));
    my $plen = pack("C", length($pass));
        
    $user .= ("\x00" x (30 - length($user)));
    $pass .= ("\x00" x (30 - length($pass)));
    
    my $login = $p_hdr . $user . $ulen . $pass . $plen . $p_pk2 . $plen . $pass . $p_pk3; 
    
    $s->Send($login);
    $s->Send($p_lng);
    
    $r = $s->Recv(-1, 10);
    $s->Close();
    
    if ($r && length($r) > 10 && substr($r, 8, 1) eq chr(0xe3)) { return(1) }
    return(0);
}



1;
